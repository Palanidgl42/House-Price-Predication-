# -*- coding: utf-8 -*-
"""Housepricepredication.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jpeI5VejS9aQhu0vMpAIjZHMn83bxZoq
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
from matplotlib.pyplot import cm
from sklearn.preprocessing import LabelEncoder

Data = pd.read_csv("/content/drive/MyDrive/housing.csv")
Data.head(10)

"""
    longitude: A measure of how far west a house is; a higher value is farther west
    latitude: A measure of how far north a house is; a higher value is farther north
    housingMedianAge: Median age of a house within a block; a lower number is a newer building
    totalRooms: Total number of rooms within a block
    totalBedrooms: Total number of bedrooms within a block
    population: Total number of people residing within a block
    households: Total number of households, a group of people residing within a home unit, for a block
    medianIncome: Median income for households within a block of houses (measured in tens of thousands of US Dollars)
    medianHouseValue: Median house value for households within a block (measured in US Dollars)
    oceanProximity: Location of the house w.r.t ocean/sea

"""

Data.info()

Data.isnull().sum()

Data[Data.isnull().any(axis=1)]

Data.fillna(Data.mean(), inplace=True)
print(Data.isnull().sum())

sns.countplot(x = 'ocean_proximity',data = Data)

le = LabelEncoder()
Data['ocean'] = le.fit_transform(Data['ocean_proximity'])
Data

Data.dtypes

Data= Data.drop('ocean_proximity', axis=1)

Data.describe()

sns.boxplot(x=Data['total_rooms'])

sns.boxplot(x=Data['population'])

sns.boxplot(x=Data['median_house_value'])

sns.boxplot(x=Data['total_bedrooms'])

Q1_r = Data.quantile(0.25)
Q3_r = Data.quantile(0.75)
IQR_r = Q3_r - Q1_r
print(IQR_r)

Data_out = Data[~((Data < (Q1_r - 1.5 * IQR_r))|(Data > (Q3_r + 1.5 * IQR_r))).any(axis=1)]
Data_out.info()

sns.boxplot(x=Data_out['total_rooms'])

postcode_group = np.asarray(Data_out.groupby('ocean')['latitude','longitude'])
color=iter(cm.rainbow(np.linspace(0,1,len(postcode_group))))

plt.clf()
plt.grid(False)
for k in range(len(postcode_group)):
  c = next(color)
  plt.scatter(postcode_group[k][1]['latitude'],
              postcode_group[k][1]['longitude'],c=c,s = 5.0)


plt.title("Visualisation of available properties using postal codes")
plt.xlabel("Lattitude")
plt.ylabel("Longtitude")
plt.show()

from sklearn.model_selection import train_test_split

X = Data_out.drop(["latitude","longitude","median_house_value"],axis=1)
y = Data_out["median_house_value"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)

from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train,y_train)


predictions = lm.predict(X_test)

sns.distplot((y_test),bins=50)
sns.distplot((predictions),bins=50)

#sns.distplot((y_test-predictions),bins=50)
print(type(X_test))

#df=[[34.5],[1445.],[234.56],[3456.],[2019.],[8.],[3]]
df = pd.DataFrame(columns=['housing_median_age','total_rooms','total_bedrooms','population','households','median_income','ocean'])
df_s = {'housing_median_age': 12.3,
        'total_rooms': 1445.,
        'total_bedrooms': 234.,
        'population': 3524.,
        'households': 2321.,
        'median_income': 8.,
        'ocean': 3}
df = df.append(df_s, ignore_index= True)
pred = lm.predict(df)
print(pred)