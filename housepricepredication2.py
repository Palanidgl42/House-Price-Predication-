# -*- coding: utf-8 -*-
"""Housepricepredication2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11iz3qeZOyHqZlolxCm-r1cxKtdh-NLp2
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
from matplotlib.pyplot import cm

Data = pd.read_csv("/content/drive/MyDrive/housing.csv")
Data.head(10)

"""1. longitude: A measure of how far west a house is; a higher value is farther west 
2. latitude: A measure of how far north a house is; a higher value is farther north 
3. housingMedianAge: Median age of a house within a block; a lower number is a newer building 
4. totalRooms: Total number of rooms within a block 
5. totalBedrooms: Total number of bedrooms within a block 
6. population: Total number of people residing within a block 
7. households: Total number of households, a group of people residing within a home unit, for a block 
8. medianIncome: Median income for households within a block of houses (measured in tens of thousands of US Dollars) 
9. medianHouseValue: Median house value for households within a block (measured in US Dollars) 
10. oceanProximity: Location of the house w.r.t ocean/sea
"""

Data.info()

Data.isnull().sum()

Data[Data.isnull().any(axis=1)]

Data.fillna(Data.mean(), inplace=True)
print(Data.isnull().sum())

sns.countplot(x = 'ocean_proximity',data = Data)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
Data['ocean'] = le.fit_transform(Data['ocean_proximity'])
Data

Data= Data.drop('ocean_proximity', axis=1)

Data.describe()

from sklearn.model_selection import train_test_split

X = Data.drop(["latitude","longitude","median_house_value"],axis=1)
y = Data["median_house_value"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1)

from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train,y_train)


predictions = lm.predict(X_test)

sns.distplot((y_test),bins=50)
sns.distplot((predictions),bins=50)

df = pd.DataFrame(columns=['housing_median_age','total_rooms','total_bedrooms','population','households','median_income','ocean'])
df_s = {'housing_median_age': 12.3,
        'total_rooms': 1445.,
        'total_bedrooms': 234.,
        'population': 3524.,
        'households': 2321.,
        'median_income': 8.,
        'ocean': 3}
df = df.append(df_s, ignore_index= True)
pred = lm.predict(df)
print(pred)